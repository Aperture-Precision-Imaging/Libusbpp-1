; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Workspace\Libusb++\src\deviceimpl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>
PUBLIC	??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
PUBLIC	??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
PUBLIC	??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device>::reset<libusb_device,LibUSB::DeviceDeleter>
PUBLIC	??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>
PUBLIC	??0?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle>
PUBLIC	??0?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device>
PUBLIC	??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z	; LibUSB::DeviceImpl::DeviceImpl
EXTRN	_libusb_ref_device@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT xdata$x
; File d:\workspace\libusb++\src\deviceimpl.cpp
xdata$x	SEGMENT
__unwindtable$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z$2
__ehfuncinfo$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z
_TEXT	SEGMENT
$T100418 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_device$ = 8						; size = 4
??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z PROC	; LibUSB::DeviceImpl::DeviceImpl, COMDAT
; _this$ = ecx
; Line 10
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+24], ax
; Line 13
	xor	eax, eax
	mov	BYTE PTR $T100418[ebp], al
	movzx	ecx, BYTE PTR $T100418[ebp]
	push	ecx
	mov	edx, DWORD PTR _device$[ebp]
	push	edx
	call	_libusb_ref_device@4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device>::reset<libusb_device,LibUSB::DeviceDeleter>
; Line 15
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
__unwindfunclet$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
__unwindfunclet$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>
__ehhandler$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DeviceImpl@LibUSB@@QAE@PAUlibusb_device@@@Z ENDP	; LibUSB::DeviceImpl::DeviceImpl
PUBLIC	??1DeviceImpl@LibUSB@@QAE@XZ			; LibUSB::DeviceImpl::~DeviceImpl
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DeviceImpl@LibUSB@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DeviceImpl@LibUSB@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DeviceImpl@LibUSB@@QAE@XZ$1
__ehfuncinfo$??1DeviceImpl@LibUSB@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1DeviceImpl@LibUSB@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1DeviceImpl@LibUSB@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1DeviceImpl@LibUSB@@QAE@XZ PROC			; LibUSB::DeviceImpl::~DeviceImpl, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DeviceImpl@LibUSB@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 21
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DeviceImpl@LibUSB@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
__unwindfunclet$??1DeviceImpl@LibUSB@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
__ehhandler$??1DeviceImpl@LibUSB@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DeviceImpl@LibUSB@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DeviceImpl@LibUSB@@QAE@XZ ENDP			; LibUSB::DeviceImpl::~DeviceImpl
PUBLIC	??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@ABV012@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>
PUBLIC	__TI1?AVexception@std@@
PUBLIC	??_C@_0CH@LIBGIOEF@libusb_get_device_descriptor?$CI?$CJ?5f@ ; `string'
PUBLIC	?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ; std::tr1::shared_ptr<libusb_device>::get
PUBLIC	??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::reset<libusb_device_descriptor>
PUBLIC	?get@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::get
PUBLIC	?getDeviceDescriptor@DeviceImpl@LibUSB@@QAE?AV?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@XZ ; LibUSB::DeviceImpl::getDeviceDescriptor
PUBLIC	__CTA1?AVexception@std@@
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	_libusb_get_device_descriptor@8:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA1?AVexception@std@@
xdata$x	SEGMENT
__CTA1?AVexception@std@@ DD 01H
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI1?AVexception@std@@
xdata$x	SEGMENT
__TI1?AVexception@std@@ DD 00H
	DD	FLAT:??1exception@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA1?AVexception@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0CH@LIBGIOEF@libusb_get_device_descriptor?$CI?$CJ?5f@
CONST	SEGMENT
??_C@_0CH@LIBGIOEF@libusb_get_device_descriptor?$CI?$CJ?5f@ DB 'libusb_ge'
	DB	't_device_descriptor() failed.', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getDeviceDescriptor@DeviceImpl@LibUSB@@QAE?AV?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@XZ
_TEXT	SEGMENT
$T100455 = -268						; size = 4
$T100456 = -256						; size = 12
$T100457 = -236						; size = 4
$T100460 = -224						; size = 4
_Result$93169 = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getDeviceDescriptor@DeviceImpl@LibUSB@@QAE?AV?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@XZ PROC ; LibUSB::DeviceImpl::getDeviceDescriptor, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T100460[ebp], 0
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::get
	test	eax, eax
	jne	SHORT $LN2@getDeviceD
; Line 29
	push	18					; 00000012H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T100455[ebp], eax
	mov	eax, DWORD PTR $T100455[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::reset<libusb_device_descriptor>
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ; std::tr1::shared_ptr<libusb_device>::get
	push	eax
	call	_libusb_get_device_descriptor@8
	mov	DWORD PTR _Result$93169[ebp], eax
; Line 34
	cmp	DWORD PTR _Result$93169[ebp], 0
	je	SHORT $LN2@getDeviceD
; Line 36
	mov	DWORD PTR $T100457[ebp], OFFSET ??_C@_0CH@LIBGIOEF@libusb_get_device_descriptor?$CI?$CJ?5f@
	mov	esi, esp
	lea	eax, DWORD PTR $T100457[ebp]
	push	eax
	lea	ecx, DWORD PTR $T100456[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	OFFSET __TI1?AVexception@std@@
	lea	ecx, DWORD PTR $T100456[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@getDeviceD:
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@ABV012@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>
	mov	ecx, DWORD PTR $T100460[ebp]
	or	ecx, 1
	mov	DWORD PTR $T100460[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN4@getDeviceD:
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getDeviceDescriptor@DeviceImpl@LibUSB@@QAE?AV?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@XZ ENDP ; LibUSB::DeviceImpl::getDeviceDescriptor
_TEXT	ENDS
PUBLIC	?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::shared_ptr<libusb_device_handle>::get
PUBLIC	?isOpen@DeviceImpl@LibUSB@@QBE_NXZ		; LibUSB::DeviceImpl::isOpen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isOpen@DeviceImpl@LibUSB@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isOpen@DeviceImpl@LibUSB@@QBE_NXZ PROC			; LibUSB::DeviceImpl::isOpen, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::shared_ptr<libusb_device_handle>::get
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 51
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isOpen@DeviceImpl@LibUSB@@QBE_NXZ ENDP			; LibUSB::DeviceImpl::isOpen
_TEXT	ENDS
PUBLIC	??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device_handle>::reset<libusb_device_handle,LibUSB::DeviceHandleDeleter>
PUBLIC	??1LibUSBException@LibUSB@@UAE@XZ		; LibUSB::LibUSBException::~LibUSBException
PUBLIC	__TI3?AVLibUSBException@LibUSB@@
PUBLIC	??0LibUSBException@LibUSB@@QAE@ABV01@@Z		; LibUSB::LibUSBException::LibUSBException
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_0BG@GLDDEDGD@libusb_open?$CI?$CJ?5failed?4?$AA@ ; `string'
PUBLIC	??_C@_0CG@PDPPENLH@Open?$CI?$CJ?5failed?5?9?5?$CIThere?5is?5no?5dev@ ; `string'
PUBLIC	?Open@DeviceImpl@LibUSB@@QAEXXZ			; LibUSB::DeviceImpl::Open
PUBLIC	__CTA3?AVLibUSBException@LibUSB@@
PUBLIC	__CT??_R0?AVLibUSBException@LibUSB@@@8??0LibUSBException@LibUSB@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVLibUSBException@LibUSB@@@8		; LibUSB::LibUSBException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
EXTRN	??0LibUSBException@LibUSB@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:PROC ; LibUSB::LibUSBException::LibUSBException
EXTRN	_libusb_open@8:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVLibUSBException@LibUSB@@@8
_DATA	SEGMENT
??_R0?AVLibUSBException@LibUSB@@@8 DD FLAT:??_7type_info@@6B@ ; LibUSB::LibUSBException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLibUSBException@LibUSB@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVLibUSBException@LibUSB@@@8??0LibUSBException@LibUSB@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVLibUSBException@LibUSB@@@8??0LibUSBException@LibUSB@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVLibUSBException@LibUSB@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0LibUSBException@LibUSB@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVLibUSBException@LibUSB@@
xdata$x	SEGMENT
__CTA3?AVLibUSBException@LibUSB@@ DD 03H
	DD	FLAT:__CT??_R0?AVLibUSBException@LibUSB@@@8??0LibUSBException@LibUSB@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVLibUSBException@LibUSB@@
xdata$x	SEGMENT
__TI3?AVLibUSBException@LibUSB@@ DD 00H
	DD	FLAT:??1LibUSBException@LibUSB@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVLibUSBException@LibUSB@@
xdata$x	ENDS
;	COMDAT ??_C@_0BG@GLDDEDGD@libusb_open?$CI?$CJ?5failed?4?$AA@
CONST	SEGMENT
??_C@_0BG@GLDDEDGD@libusb_open?$CI?$CJ?5failed?4?$AA@ DB 'libusb_open() f'
	DB	'ailed.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PDPPENLH@Open?$CI?$CJ?5failed?5?9?5?$CIThere?5is?5no?5dev@
CONST	SEGMENT
??_C@_0CG@PDPPENLH@Open?$CI?$CJ?5failed?5?9?5?$CIThere?5is?5no?5dev@ DB 'O'
	DB	'pen() failed - (There is no device!)', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Open@DeviceImpl@LibUSB@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Open@DeviceImpl@LibUSB@@QAEXXZ$1
__ehfuncinfo$?Open@DeviceImpl@LibUSB@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Open@DeviceImpl@LibUSB@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Open@DeviceImpl@LibUSB@@QAEXXZ
_TEXT	SEGMENT
tv147 = -348						; size = 4
tv84 = -344						; size = 4
tv145 = -340						; size = 4
$T100466 = -332						; size = 12
$T100467 = -312						; size = 4
$T100468 = -300						; size = 12
$T100469 = -280						; size = 12
$T100470 = -260						; size = 4
$T100471 = -245						; size = 1
_Result$93281 = -44					; size = 4
_pHandle$93280 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Open@DeviceImpl@LibUSB@@QAEXXZ PROC			; LibUSB::DeviceImpl::Open, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@DeviceImpl@LibUSB@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ; std::tr1::shared_ptr<libusb_device>::get
	test	eax, eax
	jne	SHORT $LN3@Open
; Line 58
	mov	DWORD PTR $T100467[ebp], OFFSET ??_C@_0CG@PDPPENLH@Open?$CI?$CJ?5failed?5?9?5?$CIThere?5is?5no?5dev@
	mov	esi, esp
	lea	eax, DWORD PTR $T100467[ebp]
	push	eax
	lea	ecx, DWORD PTR $T100466[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	OFFSET __TI1?AVexception@std@@
	lea	ecx, DWORD PTR $T100466[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Open:
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::shared_ptr<libusb_device_handle>::get
	test	eax, eax
	jne	$LN5@Open
; Line 66
	lea	eax, DWORD PTR _pHandle$93280[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ; std::tr1::shared_ptr<libusb_device>::get
	push	eax
	call	_libusb_open@8
	mov	DWORD PTR _Result$93281[ebp], eax
; Line 68
	cmp	DWORD PTR _Result$93281[ebp], 0
	je	SHORT $LN1@Open
; Line 71
	mov	eax, DWORD PTR _Result$93281[ebp]
	push	eax
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T100470[ebp], esp
	push	OFFSET ??_C@_0BG@GLDDEDGD@libusb_open?$CI?$CJ?5failed?4?$AA@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv145[ebp], eax
	lea	ecx, DWORD PTR $T100469[ebp]
	call	??0LibUSBException@LibUSB@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; LibUSB::LibUSBException::LibUSBException
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	lea	ecx, DWORD PTR $T100468[ebp]
	call	??0LibUSBException@LibUSB@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVLibUSBException@LibUSB@@
	lea	eax, DWORD PTR $T100468[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T100469[ebp]
	call	??1LibUSBException@LibUSB@@UAE@XZ
$LN1@Open:
; Line 75
	xor	eax, eax
	mov	BYTE PTR $T100471[ebp], al
	movzx	ecx, BYTE PTR $T100471[ebp]
	push	ecx
	mov	edx, DWORD PTR _pHandle$93280[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device_handle>::reset<libusb_device_handle,LibUSB::DeviceHandleDeleter>
$LN5@Open:
; Line 78
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@Open:
	DD	1
	DD	$LN10@Open
$LN10@Open:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@Open
$LN8@Open:
	DB	112					; 00000070H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Open@DeviceImpl@LibUSB@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T100469[ebp]
	jmp	??1LibUSBException@LibUSB@@UAE@XZ
__ehhandler$?Open@DeviceImpl@LibUSB@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Open@DeviceImpl@LibUSB@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@DeviceImpl@LibUSB@@QAEXXZ ENDP			; LibUSB::DeviceImpl::Open
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1LibUSBException@LibUSB@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LibUSBException@LibUSB@@UAE@XZ PROC			; LibUSB::LibUSBException::~LibUSBException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1LibUSBException@LibUSB@@UAE@XZ ENDP			; LibUSB::LibUSBException::~LibUSBException
_TEXT	ENDS
PUBLIC	??_7LibUSBException@LibUSB@@6B@			; LibUSB::LibUSBException::`vftable'
PUBLIC	??_R4LibUSBException@LibUSB@@6B@		; LibUSB::LibUSBException::`RTTI Complete Object Locator'
PUBLIC	??_R3LibUSBException@LibUSB@@8			; LibUSB::LibUSBException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LibUSBException@LibUSB@@8			; LibUSB::LibUSBException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LibUSBException@LibUSB@@8		; LibUSB::LibUSBException::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_ELibUSBException@LibUSB@@UAEPAXI@Z:PROC	; LibUSB::LibUSBException::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LibUSBException@LibUSB@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LibUSBException@LibUSB@@8 DD FLAT:??_R0?AVLibUSBException@LibUSB@@@8 ; LibUSB::LibUSBException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LibUSBException@LibUSB@@8
rdata$r	ENDS
;	COMDAT ??_R2LibUSBException@LibUSB@@8
rdata$r	SEGMENT
??_R2LibUSBException@LibUSB@@8 DD FLAT:??_R1A@?0A@EA@LibUSBException@LibUSB@@8 ; LibUSB::LibUSBException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3LibUSBException@LibUSB@@8
rdata$r	SEGMENT
??_R3LibUSBException@LibUSB@@8 DD 00H			; LibUSB::LibUSBException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2LibUSBException@LibUSB@@8
rdata$r	ENDS
;	COMDAT ??_R4LibUSBException@LibUSB@@6B@
rdata$r	SEGMENT
??_R4LibUSBException@LibUSB@@6B@ DD 00H			; LibUSB::LibUSBException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLibUSBException@LibUSB@@@8
	DD	FLAT:??_R3LibUSBException@LibUSB@@8
rdata$r	ENDS
;	COMDAT ??_7LibUSBException@LibUSB@@6B@
CONST	SEGMENT
??_7LibUSBException@LibUSB@@6B@ DD FLAT:??_R4LibUSBException@LibUSB@@6B@ ; LibUSB::LibUSBException::`vftable'
	DD	FLAT:??_ELibUSBException@LibUSB@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0LibUSBException@LibUSB@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0LibUSBException@LibUSB@@QAE@ABV01@@Z PROC		; LibUSB::LibUSBException::LibUSBException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0runtime_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LibUSBException@LibUSB@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0LibUSBException@LibUSB@@QAE@ABV01@@Z ENDP		; LibUSB::LibUSBException::LibUSBException
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GLibUSBException@LibUSB@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GLibUSBException@LibUSB@@UAEPAXI@Z PROC		; LibUSB::LibUSBException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LibUSBException@LibUSB@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLibUSBException@LibUSB@@UAEPAXI@Z ENDP		; LibUSB::LibUSBException::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_0CN@ENKLNGFE@libusb_get_string_descriptor_asc@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ; LibUSB::DeviceImpl::getStringDescriptor
EXTRN	_libusb_get_string_descriptor_ascii@16:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0CN@ENKLNGFE@libusb_get_string_descriptor_asc@
CONST	SEGMENT
??_C@_0CN@ENKLNGFE@libusb_get_string_descriptor_asc@ DB 'libusb_get_strin'
	DB	'g_descriptor_ascii() failed.', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$2
__ehfuncinfo$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
_TEXT	SEGMENT
tv144 = -868						; size = 4
tv79 = -864						; size = 4
tv142 = -860						; size = 4
$T100503 = -852						; size = 12
$T100504 = -832						; size = 12
$T100505 = -812						; size = 4
$T100510 = -800						; size = 4
_strResult$ = -596					; size = 32
_Result$ = -556						; size = 4
_descStr$ = -544					; size = 512
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 1
?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z PROC ; LibUSB::DeviceImpl::getStringDescriptor, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 856				; 00000358H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-868]
	mov	ecx, 214				; 000000d6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T100510[ebp], 0
; Line 85
	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _descStr$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 87
	push	512					; 00000200H
	lea	eax, DWORD PTR _descStr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::shared_ptr<libusb_device_handle>::get
	push	eax
	call	_libusb_get_string_descriptor_ascii@16
	mov	DWORD PTR _Result$[ebp], eax
; Line 89
	cmp	DWORD PTR _Result$[ebp], 0
	jge	SHORT $LN1@getStringD
; Line 91
	mov	eax, DWORD PTR _Result$[ebp]
	push	eax
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T100505[ebp], esp
	push	OFFSET ??_C@_0CN@ENKLNGFE@libusb_get_string_descriptor_asc@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv142[ebp], eax
	lea	ecx, DWORD PTR $T100504[ebp]
	call	??0LibUSBException@LibUSB@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; LibUSB::LibUSBException::LibUSBException
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv144[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	lea	ecx, DWORD PTR $T100503[ebp]
	call	??0LibUSBException@LibUSB@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVLibUSBException@LibUSB@@
	lea	eax, DWORD PTR $T100503[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T100504[ebp]
	call	??1LibUSBException@LibUSB@@UAE@XZ
$LN1@getStringD:
; Line 94
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 95
	lea	eax, DWORD PTR _descStr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 97
	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T100510[ebp]
	or	ecx, 1
	mov	DWORD PTR $T100510[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@getStringD:
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@getStringD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 868				; 00000364H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN13@getStringD:
	DD	2
	DD	$LN12@getStringD
$LN12@getStringD:
	DD	-544					; fffffde0H
	DD	512					; 00000200H
	DD	$LN9@getStringD
	DD	-596					; fffffdacH
	DD	32					; 00000020H
	DD	$LN10@getStringD
$LN10@getStringD:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN9@getStringD:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$1:
	lea	ecx, DWORD PTR $T100504[ebp]
	jmp	??1LibUSBException@LibUSB@@UAE@XZ
__unwindfunclet$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$2:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$3:
	mov	eax, DWORD PTR $T100510[ebp]
	and	eax, 1
	je	$LN8@getStringD
	and	DWORD PTR $T100510[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@getStringD:
	ret	0
__ehhandler$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-872]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getStringDescriptor@DeviceImpl@LibUSB@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ENDP ; LibUSB::DeviceImpl::getStringDescriptor
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??_C@_0DH@EEIONNCP@USB?5string?5descriptor?5returned?5f@ ; `string'
PUBLIC	??_C@_0CH@GKJEJOCD@libusb_get_string_descriptor?$CI?$CJ?5f@ ; `string'
PUBLIC	?getLangId@DeviceImpl@LibUSB@@QAEGXZ		; LibUSB::DeviceImpl::getLangId
PUBLIC	_wmemset
PUBLIC	__$ArrayPad$
PUBLIC	?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z ; LibUSB::DeviceImpl::getStringDescriptorW
PUBLIC	__CTA2?AVruntime_error@std@@
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0DH@EEIONNCP@USB?5string?5descriptor?5returned?5f@
CONST	SEGMENT
??_C@_0DH@EEIONNCP@USB?5string?5descriptor?5returned?5f@ DB 'USB string d'
	DB	'escriptor returned from device is invalid.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GKJEJOCD@libusb_get_string_descriptor?$CI?$CJ?5f@
CONST	SEGMENT
??_C@_0CH@GKJEJOCD@libusb_get_string_descriptor?$CI?$CJ?5f@ DB 'libusb_ge'
	DB	't_string_descriptor() failed.', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z$2
__ehfuncinfo$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z
_TEXT	SEGMENT
tv159 = -516						; size = 4
tv82 = -512						; size = 4
tv157 = -508						; size = 4
$T100525 = -500						; size = 12
$T100526 = -480						; size = 12
$T100527 = -460						; size = 4
$T100528 = -448						; size = 12
$T100533 = -428						; size = 4
_strResult$ = -224					; size = 32
_descSize$ = -181					; size = 1
_Result$ = -172						; size = 4
_descStr$ = -160					; size = 128
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 1
?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z PROC ; LibUSB::DeviceImpl::getStringDescriptorW, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T100533[ebp], 0
; Line 103
	push	64					; 00000040H
	push	0
	lea	eax, DWORD PTR _descStr$[ebp]
	push	eax
	call	_wmemset
	add	esp, 12					; 0000000cH
; Line 105
	push	128					; 00000080H
	lea	eax, DWORD PTR _descStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getLangId@DeviceImpl@LibUSB@@QAEGXZ	; LibUSB::DeviceImpl::getLangId
	movzx	ecx, ax
	push	ecx
	movzx	edx, BYTE PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::shared_ptr<libusb_device_handle>::get
	push	eax
	call	_libusb_get_string_descriptor
	add	esp, 20					; 00000014H
	mov	DWORD PTR _Result$[ebp], eax
; Line 107
	cmp	DWORD PTR _Result$[ebp], 0
	jge	SHORT $LN2@getStringD@2
; Line 109
	mov	eax, DWORD PTR _Result$[ebp]
	push	eax
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T100527[ebp], esp
	push	OFFSET ??_C@_0CH@GKJEJOCD@libusb_get_string_descriptor?$CI?$CJ?5f@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv157[ebp], eax
	lea	ecx, DWORD PTR $T100526[ebp]
	call	??0LibUSBException@LibUSB@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; LibUSB::LibUSBException::LibUSBException
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv159[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv159[ebp]
	push	edx
	lea	ecx, DWORD PTR $T100525[ebp]
	call	??0LibUSBException@LibUSB@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVLibUSBException@LibUSB@@
	lea	eax, DWORD PTR $T100525[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T100526[ebp]
	call	??1LibUSBException@LibUSB@@UAE@XZ
$LN2@getStringD@2:
; Line 113
	mov	al, BYTE PTR _descStr$[ebp]
	mov	BYTE PTR _descSize$[ebp], al
; Line 116
	movzx	eax, BYTE PTR _descStr$[ebp+1]
	cmp	eax, 3
	je	SHORT $LN1@getStringD@2
; Line 118
	push	OFFSET ??_C@_0DH@EEIONNCP@USB?5string?5descriptor?5returned?5f@
	lea	ecx, DWORD PTR $T100528[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T100528[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@getStringD@2:
; Line 123
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 124
	movzx	eax, BYTE PTR _descSize$[ebp]
	sub	eax, 2
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	lea	eax, DWORD PTR _descStr$[ebp+2]
	push	eax
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 126
	lea	eax, DWORD PTR _strResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR $T100533[ebp]
	or	ecx, 1
	mov	DWORD PTR $T100533[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strResult$[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN4@getStringD@2:
; Line 127
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@getStringD@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN14@getStringD@2:
	DD	2
	DD	$LN13@getStringD@2
$LN13@getStringD@2:
	DD	-160					; ffffff60H
	DD	128					; 00000080H
	DD	$LN10@getStringD@2
	DD	-224					; ffffff20H
	DD	32					; 00000020H
	DD	$LN11@getStringD@2
$LN11@getStringD@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN10@getStringD@2:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z$1:
	lea	ecx, DWORD PTR $T100526[ebp]
	jmp	??1LibUSBException@LibUSB@@UAE@XZ
__unwindfunclet$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z$2:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
__unwindfunclet$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z$3:
	mov	eax, DWORD PTR $T100533[ebp]
	and	eax, 1
	je	$LN9@getStringD@2
	and	DWORD PTR $T100533[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN9@getStringD@2:
	ret	0
__ehhandler$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getStringDescriptorW@DeviceImpl@LibUSB@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@E@Z ENDP ; LibUSB::DeviceImpl::getStringDescriptorW
EXTRN	_libusb_control_transfer@32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _libusb_get_string_descriptor
_TEXT	SEGMENT
_dev$ = 8						; size = 4
_desc_index$ = 12					; size = 1
_langid$ = 16						; size = 2
_data$ = 20						; size = 4
_length$ = 24						; size = 4
_libusb_get_string_descriptor PROC			; COMDAT
; File d:\libraries\libusbx\libroot\libusb\libusb.h
; Line 1384
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1387
	push	1000					; 000003e8H
	movzx	eax, WORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	movzx	edx, WORD PTR _langid$[ebp]
	push	edx
	movzx	eax, BYTE PTR _desc_index$[ebp]
	or	eax, 768				; 00000300H
	push	eax
	push	6
	push	128					; 00000080H
	mov	ecx, DWORD PTR _dev$[ebp]
	push	ecx
	call	_libusb_control_transfer@32
; Line 1388
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_libusb_get_string_descriptor ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT
__Su$ = -8						; size = 4
__S$ = 8						; size = 4
__C$ = 12						; size = 2
__N$ = 16						; size = 4
_wmemset PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\wchar.h
; Line 1233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1234
	mov	eax, DWORD PTR __S$[ebp]
	mov	DWORD PTR __Su$[ebp], eax
	jmp	SHORT $LN3@wmemset
$LN2@wmemset:
; Line 1235
	mov	eax, DWORD PTR __Su$[ebp]
	add	eax, 2
	mov	DWORD PTR __Su$[ebp], eax
	mov	ecx, DWORD PTR __N$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __N$[ebp], ecx
$LN3@wmemset:
	cmp	DWORD PTR __N$[ebp], 0
	jbe	SHORT $LN1@wmemset
; Line 1237
	mov	eax, DWORD PTR __Su$[ebp]
	mov	cx, WORD PTR __C$[ebp]
	mov	WORD PTR [eax], cx
; Line 1238
	jmp	SHORT $LN2@wmemset
$LN1@wmemset:
; Line 1239
	mov	eax, DWORD PTR __S$[ebp]
; Line 1240
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemset ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdexcept
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7runtime_error@std@@6B@
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
PUBLIC	??_C@_0DF@EJJFNLPE@USB?5language?5string?5descriptor?5?$CI@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0DF@EJJFNLPE@USB?5language?5string?5descriptor?5?$CI@
; File d:\workspace\libusb++\src\deviceimpl.cpp
CONST	SEGMENT
??_C@_0DF@EJJFNLPE@USB?5language?5string?5descriptor?5?$CI@ DB 'USB langu'
	DB	'age string descriptor (index 0) is invalid.', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getLangId@DeviceImpl@LibUSB@@QAEGXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getLangId@DeviceImpl@LibUSB@@QAEGXZ$1
__ehfuncinfo$?getLangId@DeviceImpl@LibUSB@@QAEGXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getLangId@DeviceImpl@LibUSB@@QAEGXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getLangId@DeviceImpl@LibUSB@@QAEGXZ
_TEXT	SEGMENT
tv159 = -592						; size = 4
tv87 = -588						; size = 4
tv157 = -584						; size = 4
$T100555 = -576						; size = 12
$T100556 = -556						; size = 12
$T100557 = -536						; size = 4
$T100558 = -524						; size = 12
_descriptorSize$93449 = -309				; size = 1
_Result$93444 = -300					; size = 4
_data$93443 = -288					; size = 255
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?getLangId@DeviceImpl@LibUSB@@QAEGXZ PROC		; LibUSB::DeviceImpl::getLangId, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getLangId@DeviceImpl@LibUSB@@QAEGXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 580				; 00000244H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-592]
	mov	ecx, 145				; 00000091H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	test	ecx, ecx
	jne	$LN3@getLangId
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isOpen@DeviceImpl@LibUSB@@QBE_NXZ	; LibUSB::DeviceImpl::isOpen
	movzx	eax, al
	test	eax, eax
	je	$LN3@getLangId
; Line 137
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _data$93443[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 138
	push	255					; 000000ffH
	lea	eax, DWORD PTR _data$93443[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::shared_ptr<libusb_device_handle>::get
	push	eax
	call	_libusb_get_string_descriptor
	add	esp, 20					; 00000014H
	mov	DWORD PTR _Result$93444[ebp], eax
; Line 139
	cmp	DWORD PTR _Result$93444[ebp], 0
	jge	SHORT $LN2@getLangId
; Line 141
	mov	eax, DWORD PTR _Result$93444[ebp]
	push	eax
	sub	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR $T100557[ebp], esp
	push	OFFSET ??_C@_0CH@GKJEJOCD@libusb_get_string_descriptor?$CI?$CJ?5f@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv157[ebp], eax
	lea	ecx, DWORD PTR $T100556[ebp]
	call	??0LibUSBException@LibUSB@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; LibUSB::LibUSBException::LibUSBException
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv159[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv159[ebp]
	push	edx
	lea	ecx, DWORD PTR $T100555[ebp]
	call	??0LibUSBException@LibUSB@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVLibUSBException@LibUSB@@
	lea	eax, DWORD PTR $T100555[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T100556[ebp]
	call	??1LibUSBException@LibUSB@@UAE@XZ
$LN2@getLangId:
; Line 145
	mov	al, BYTE PTR _data$93443[ebp]
	mov	BYTE PTR _descriptorSize$93449[ebp], al
; Line 148
	movzx	eax, BYTE PTR _data$93443[ebp+1]
	cmp	eax, 3
	je	SHORT $LN1@getLangId
; Line 150
	push	OFFSET ??_C@_0DF@EJJFNLPE@USB?5language?5string?5descriptor?5?$CI@
	lea	ecx, DWORD PTR $T100558[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T100558[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@getLangId:
; Line 154
	movzx	eax, BYTE PTR _data$93443[ebp+2]
	movzx	ecx, BYTE PTR _data$93443[ebp+3]
	shl	ecx, 8
	or	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+24], ax
$LN3@getLangId:
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+24]
$LN5@getLangId:
; Line 160
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@getLangId
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 592				; 00000250H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@getLangId:
	DD	1
	DD	$LN10@getLangId
$LN10@getLangId:
	DD	-288					; fffffee0H
	DD	255					; 000000ffH
	DD	$LN8@getLangId
$LN8@getLangId:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getLangId@DeviceImpl@LibUSB@@QAEGXZ$1:
	lea	ecx, DWORD PTR $T100556[ebp]
	jmp	??1LibUSBException@LibUSB@@UAE@XZ
__ehhandler$?getLangId@DeviceImpl@LibUSB@@QAEGXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-596]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getLangId@DeviceImpl@LibUSB@@QAEGXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getLangId@DeviceImpl@LibUSB@@QAEGXZ ENDP		; LibUSB::DeviceImpl::getLangId
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T100572 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T100572[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T100582 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T100582[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 593
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 594
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T100592 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	mov	ecx, esp
	mov	DWORD PTR $T100592[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 704
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 753
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 754
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??_C@_1IO@GEGAMENF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
;	COMDAT ??_C@_1IO@GEGAMENF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@GEGAMENF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 929
	push	929					; 000003a1H
	push	OFFSET ??_C@_1IO@GEGAMENF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 930
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 931
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
; Line 492
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T100615 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T100615[ebp], esp
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??0?$allocator@_W@std@@QAE@ABV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T100625 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ; std::forward<std::allocator<wchar_t> >
	mov	ecx, esp
	mov	DWORD PTR $T100625[ebp], esp
	push	eax
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 704
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 753
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 754
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z		; std::_Debug_pointer<wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; Line 910
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 912
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 913
	push	913					; 00000391H
	push	OFFSET ??_C@_1IO@GEGAMENF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 916
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign
; Line 917
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 919
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 921
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 922
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@assign:
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 925
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	_wmemcpy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 303
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_wmemcpy
	add	esp, 12					; 0000000cH
; Line 304
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\wchar.h
; Line 1210
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1213
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemcpy ENDP
_TEXT	ENDS
PUBLIC	??0?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAE@XZ	; std::tr1::_Ptr_base<libusb_device>::_Ptr_base<libusb_device>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ PROC	; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 1424
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device>::_Ptr_base<libusb_device>
; Line 1426
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ENDP	; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device>
_TEXT	ENDS
PUBLIC	?_Decref@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXXZ ; std::tr1::_Ptr_base<libusb_device>::_Decref
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ PROC	; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>, COMDAT
; _this$ = ecx
; Line 1575
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1576
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXXZ ; std::tr1::_Ptr_base<libusb_device>::_Decref
; Line 1577
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ENDP	; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
_TEXT	ENDS
PUBLIC	?_Get@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ; std::tr1::_Ptr_base<libusb_device>::_Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ PROC ; std::tr1::shared_ptr<libusb_device>::get, COMDAT
; _this$ = ecx
; Line 1633
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1634
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ; std::tr1::_Ptr_base<libusb_device>::_Get
; Line 1635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$shared_ptr@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ENDP ; std::tr1::shared_ptr<libusb_device>::get
_TEXT	ENDS
PUBLIC	??0?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Ptr_base<libusb_device_handle>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ PROC ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle>, COMDAT
; _this$ = ecx
; Line 1424
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Ptr_base<libusb_device_handle>
; Line 1426
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ENDP ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle>
_TEXT	ENDS
PUBLIC	?_Decref@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXXZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Decref
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ PROC ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>, COMDAT
; _this$ = ecx
; Line 1575
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1576
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXXZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Decref
; Line 1577
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ENDP ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
_TEXT	ENDS
PUBLIC	?_Get@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ PROC ; std::tr1::shared_ptr<libusb_device_handle>::get, COMDAT
; _this$ = ecx
; Line 1633
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1634
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Get
; Line 1635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ENDP ; std::tr1::shared_ptr<libusb_device_handle>::get
_TEXT	ENDS
PUBLIC	??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Ptr_base<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1424
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Ptr_base<libusb_device_descriptor>
; Line 1426
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>
_TEXT	ENDS
PUBLIC	??$_Reset@Ulibusb_device_descriptor@@@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXABV012@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@ABV012@@Z PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1482
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Ptr_base<libusb_device_descriptor>
; Line 1484
	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reset@Ulibusb_device_descriptor@@@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXABV012@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset<libusb_device_descriptor>
; Line 1485
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@ABV012@@Z ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor>
_TEXT	ENDS
PUBLIC	?_Decref@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXXZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Decref
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1575
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1576
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decref@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXXZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Decref
; Line 1577
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>
_TEXT	ENDS
PUBLIC	?_Get@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::get, COMDAT
; _this$ = ecx
; Line 1633
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1634
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Get
; Line 1635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::get
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
$T100670 = -221						; size = 1
$T100671 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign@2
; Line 716
	jmp	$LN5@assign@2
$LN6@assign@2:
; Line 717
	lea	eax, DWORD PTR $T100670[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	lea	ecx, DWORD PTR $T100671[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	call	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator!=<char,char>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@assign@2
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN4@assign@2
; Line 718
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 719
	jmp	SHORT $LN5@assign@2
$LN4@assign@2:
; Line 721
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 722
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jae	SHORT $LN2@assign@2
; Line 724
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@2
$LN2@assign@2:
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 728
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN1@assign@2:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 733
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
$LN5@assign@2:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 516
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 517
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 910
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 912
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign@3
; Line 913
	push	913					; 00000391H
	push	OFFSET ??_C@_1IO@GEGAMENF@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign@3:
; Line 916
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@3
; Line 917
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign@3
$LN2@assign@3:
; Line 919
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign@3
; Line 921
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 922
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign@3:
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign@3:
; Line 925
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 496
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 497
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$95298 = -20					; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1987
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1988
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 1990
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 1992
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$95298[ebp], ecx
; Line 1993
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 1994
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$95298[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 1995
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$95298[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:
; Line 1997
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 1998
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1999
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
$T100682 = -240						; size = 8
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 466
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
; Line 469
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 470
	lea	ecx, DWORD PTR $T100682[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 471
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 472
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@String_val:
	DD	1
	DD	$LN6@String_val
$LN6@String_val:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@String_val
$LN4@String_val:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 475
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
; Line 478
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8
; Line 480
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 482
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@String_val@2:
	DD	1
	DD	$LN6@String_val@2
$LN6@String_val@2:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@String_val@2
$LN4@String_val@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator!=<wchar_t,wchar_t>
PUBLIC	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
$T100713 = -221						; size = 1
$T100714 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign@4
; Line 716
	jmp	$LN5@assign@4
$LN6@assign@4:
; Line 717
	lea	eax, DWORD PTR $T100713[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
	push	eax
	lea	ecx, DWORD PTR $T100714[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
	push	eax
	call	??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ; std::operator!=<wchar_t,wchar_t>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@assign@4
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN4@assign@4
; Line 718
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Line 719
	jmp	SHORT $LN5@assign@4
$LN4@assign@4:
; Line 721
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 722
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jae	SHORT $LN2@assign@4
; Line 724
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@4
$LN2@assign@4:
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 728
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN1@assign@4:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 733
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
$LN5@assign@4:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	_wmemmove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 323
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_wmemmove
	add	esp, 12					; 0000000cH
; Line 324
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::move
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\wchar.h
; Line 1218
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1223
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_wmemmove ENDP
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
;	COMDAT ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB DD 0ffffffffH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@5
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN5@assign@5:
; Line 895
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@5
; Line 897
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign@5:
; Line 899
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@5
; Line 900
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	jmp	SHORT $LN2@assign@5
$LN3@assign@5:
; Line 901
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@5
; Line 903
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@assign@5:
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign@5:
; Line 907
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T100725 = -210						; size = 2
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1953
	xor	eax, eax
	mov	WORD PTR $T100725[ebp], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+20], edx
	lea	eax, DWORD PTR $T100725[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Newsize$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ; std::char_traits<wchar_t>::assign
	add	esp, 8
; Line 1954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 333
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1959
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 1962
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 1963
	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN3@Grow
; Line 1965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 1966
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 1967
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@Grow:
; Line 1968
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:
; Line 1969
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx
; Line 1972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1973
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [eax+edx*2]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 1974
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 1975
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 1976
	mov	al, 1
$LN4@Inside:
; Line 1977
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$96293 = -20					; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1987
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1988
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy@2
	jmp	SHORT $LN3@Tidy@2
$LN4@Tidy@2:
; Line 1990
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Tidy@2
; Line 1992
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$96293[ebp], ecx
; Line 1993
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy@2
; Line 1994
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$96293[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy@2:
; Line 1995
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$96293[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
$LN3@Tidy@2:
; Line 1997
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 7
; Line 1998
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 1999
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2002
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2005
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
_TEXT	ENDS
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z$0
__ehfuncinfo$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T100746 = -240						; size = 8
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z PROC ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; Line 466
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
; Line 469
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 470
	lea	ecx, DWORD PTR $T100746[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 471
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 472
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@String_val@3:
	DD	1
	DD	$LN6@String_val@3
$LN6@String_val@3:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@String_val@3
$LN4@String_val@3:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@V?$allocator@_W@1@@Z ENDP ; std::_String_val<wchar_t,std::allocator<wchar_t> >::_String_val<wchar_t,std::allocator<wchar_t> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -29					; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; Line 475
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
; Line 478
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8
; Line 480
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 482
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@String_val@4:
	DD	1
	DD	$LN6@String_val@4
$LN6@String_val@4:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@String_val@4
$LN4@String_val@4:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@_WV?$allocator@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<wchar_t,std::allocator<wchar_t> >::~_String_val<wchar_t,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$allocator@_W@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@_W@std@@QAE@ABV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@_W@std@@QAE@ABV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAE@XZ PROC	; std::tr1::_Ptr_base<libusb_device>::_Ptr_base<libusb_device>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 1226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1227
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAE@XZ ENDP	; std::tr1::_Ptr_base<libusb_device>::_Ptr_base<libusb_device>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Get@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ PROC ; std::tr1::_Ptr_base<libusb_device>::_Get, COMDAT
; _this$ = ecx
; Line 1278
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1279
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1280
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QBEPAUlibusb_device@@XZ ENDP ; std::tr1::_Ptr_base<libusb_device>::_Get
_TEXT	ENDS
PUBLIC	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ	; std::tr1::_Ref_count_base::_Decref
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Decref@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXXZ PROC ; std::tr1::_Ptr_base<libusb_device>::_Decref, COMDAT
; _this$ = ecx
; Line 1288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1289
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Decref
; Line 1290
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decref
$LN2@Decref:
; Line 1291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXXZ ENDP ; std::tr1::_Ptr_base<libusb_device>::_Decref
_TEXT	ENDS
PUBLIC	?_Decwref@_Ref_count_base@tr1@std@@QAEXXZ	; std::tr1::_Ref_count_base::_Decwref
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Decref@_Ref_count_base@tr1@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@_Ref_count_base@tr1@std@@QAEXXZ PROC		; std::tr1::_Ref_count_base::_Decref, COMDAT
; _this$ = ecx
; Line 1063
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1064
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	jne	SHORT $LN2@Decref@2
; Line 1066
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1067
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Decwref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decwref
$LN2@Decref@2:
; Line 1069
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ENDP		; std::tr1::_Ref_count_base::_Decref
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Decwref@_Ref_count_base@tr1@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decwref@_Ref_count_base@tr1@std@@QAEXXZ PROC		; std::tr1::_Ref_count_base::_Decwref, COMDAT
; _this$ = ecx
; Line 1072
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1073
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	jne	SHORT $LN2@Decwref
; Line 1074
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Decwref:
; Line 1075
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decwref@_Ref_count_base@tr1@std@@QAEXXZ ENDP		; std::tr1::_Ref_count_base::_Decwref
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAE@XZ PROC ; std::tr1::_Ptr_base<libusb_device_handle>::_Ptr_base<libusb_device_handle>, COMDAT
; _this$ = ecx
; Line 1226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1227
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ENDP ; std::tr1::_Ptr_base<libusb_device_handle>::_Ptr_base<libusb_device_handle>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Get@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ PROC ; std::tr1::_Ptr_base<libusb_device_handle>::_Get, COMDAT
; _this$ = ecx
; Line 1278
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1279
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1280
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QBEPAUlibusb_device_handle@@XZ ENDP ; std::tr1::_Ptr_base<libusb_device_handle>::_Get
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Decref@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXXZ PROC ; std::tr1::_Ptr_base<libusb_device_handle>::_Decref, COMDAT
; _this$ = ecx
; Line 1288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1289
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Decref@3
; Line 1290
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decref
$LN2@Decref@3:
; Line 1291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXXZ ENDP ; std::tr1::_Ptr_base<libusb_device_handle>::_Decref
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Ptr_base<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1226
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1227
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Ptr_base<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Get@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Get, COMDAT
; _this$ = ecx
; Line 1278
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1279
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1280
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QBEPAUlibusb_device_descriptor@@XZ ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Get
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Decref@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Decref@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXXZ PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Decref, COMDAT
; _this$ = ecx
; Line 1288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1289
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Decref@4
; Line 1290
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decref
$LN2@Decref@4:
; Line 1291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXXZ ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Decref
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 762
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@6
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign@6:
; Line 895
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@6
; Line 897
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign@6:
; Line 899
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@6
; Line 900
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign@6
$LN3@assign@6:
; Line 901
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@6
; Line 903
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign@6:
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign@6:
; Line 907
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1512
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr@3
$LN3@Myptr@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr@3:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2011
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; Line 1905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1907
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T100809 = -209						; size = 1
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1953
	mov	BYTE PTR $T100809[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T100809[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 526
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 527
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 528
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1959
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow@2
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow@2:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow@2
; Line 1962
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow@2
$LN5@Grow@2:
; Line 1963
	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow@2
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow@2
; Line 1965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow@2
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow@2
$LN9@Grow@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow@2:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow@2
$LN3@Grow@2:
; Line 1966
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow@2
; Line 1967
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow@2:
; Line 1968
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow@2:
; Line 1969
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1972
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1973
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@2
$LN2@Inside@2:
; Line 1974
	xor	al, al
	jmp	SHORT $LN4@Inside@2
; Line 1975
	jmp	SHORT $LN4@Inside@2
$LN3@Inside@2:
; Line 1976
	mov	al, 1
$LN4@Inside@2:
; Line 1977
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv82 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2002
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr@4
$LN3@Myptr@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr@4:
	mov	eax, DWORD PTR tv82[ebp]
; Line 2005
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2019
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2020
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:
; Line 2021
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 762
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 764
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$96772 = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; Line 1108
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase
; Line 1110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN3@erase:
; Line 1111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase
; Line 1112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN2@erase:
; Line 1113
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$96772[ebp], ecx
; Line 1118
	mov	eax, DWORD PTR __Newsize$96772[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@erase:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase:
; Line 1121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; Line 1515
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1516
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?max_size@?$allocator@_W@std@@QBEIXZ	; std::allocator<wchar_t>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1517
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator, COMDAT
; _this$ = ecx
; Line 1905
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@_W@std@@QAE@ABV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1907
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv185 = -248						; size = 4
tv184 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 7
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 1921
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 1922
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 1924
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 1926
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1927
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 1928
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 1931
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1932
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0:
; Line 1933
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1934
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1935
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1936
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR tv185[ebp], eax
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1:
; Line 1938
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 1939
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1940
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2:
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3:
; Line 1943
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 1944
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEPA_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 1945
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1947
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1948
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN11@Copy:
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2014
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2015
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 2016
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT
; _this$ = ecx
; Line 2019
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2020
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran@2:
; Line 2021
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$96887 = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; Line 1108
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2
; Line 1110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase@2:
; Line 1111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2
; Line 1112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN2@erase@2:
; Line 1113
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$96887[ebp], ecx
; Line 1118
	mov	eax, DWORD PTR __Newsize$96887[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase@2:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase@2:
; Line 1121
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; Line 1515
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1516
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1517
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size@2
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size@2:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1518
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv185 = -248						; size = 4
tv184 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy@2
; Line 1921
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	jmp	SHORT $LN8@Copy@2
$LN9@Copy@2:
; Line 1922
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy@2
	jmp	SHORT $LN8@Copy@2
$LN7@Copy@2:
; Line 1924
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy@2
; Line 1926
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1927
	jmp	SHORT $LN8@Copy@2
$LN5@Copy@2:
; Line 1928
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy@2:
; Line 1931
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1932
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy@2
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1933
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1934
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1935
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1936
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv185[ebp], eax
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN14@Copy@2
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1939
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1940
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 1943
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy@2
; Line 1944
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy@2:
; Line 1945
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1947
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1948
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy@2:
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2014
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2015
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen@2:
; Line 2016
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 888
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
PUBLIC	??$_Allocate@_W@std@@YAPA_WIPA_W@Z		; std::_Allocate<wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@_W@std@@YAPA_WIPA_W@Z	; std::_Allocate<wchar_t>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], -1
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@4
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@4
$LN3@max_size@4:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@4:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?swap@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::shared_ptr<libusb_device>::swap
PUBLIC	??$?0Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device><libusb_device,LibUSB::DeviceDeleter>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$0
__ehfuncinfo$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
_TEXT	SEGMENT
tv73 = -240						; size = 4
tv74 = -236						; size = 4
$T100912 = -228						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z PROC ; std::tr1::shared_ptr<libusb_device>::reset<libusb_device,LibUSB::DeviceDeleter>, COMDAT
; _this$ = ecx
; Line 1612
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1614
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	movzx	ecx, BYTE PTR __Dt$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Px$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T100912[ebp]
	call	??$?0Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device><libusb_device,LibUSB::DeviceDeleter>
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv73[ebp]
	call	?swap@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::shared_ptr<libusb_device>::swap
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T100912[ebp]
	call	??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
; Line 1615
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$0:
	lea	ecx, DWORD PTR $T100912[ebp]
	jmp	??1?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device>::~shared_ptr<libusb_device>
__ehhandler$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$reset@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ENDP ; std::tr1::shared_ptr<libusb_device>::reset<libusb_device,LibUSB::DeviceDeleter>
PUBLIC	?swap@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::swap
PUBLIC	??$?0Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor><libusb_device_descriptor>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z$0
__ehfuncinfo$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z
_TEXT	SEGMENT
tv72 = -240						; size = 4
tv73 = -236						; size = 4
$T100922 = -228						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Px$ = 8						; size = 4
??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::reset<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1605
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1607
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T100922[ebp]
	call	??$?0Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor><libusb_device_descriptor>
	mov	DWORD PTR tv73[ebp], eax
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv72[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv72[ebp]
	call	?swap@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::swap
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T100922[ebp]
	call	??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>
; Line 1608
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z$0:
	lea	ecx, DWORD PTR $T100922[ebp]
	jmp	??1?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_descriptor>::~shared_ptr<libusb_device_descriptor>
__ehhandler$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$reset@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@@Z ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::reset<libusb_device_descriptor>
PUBLIC	?swap@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::shared_ptr<libusb_device_handle>::swap
PUBLIC	??$?0Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle><libusb_device_handle,LibUSB::DeviceHandleDeleter>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$0
__ehfuncinfo$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
_TEXT	SEGMENT
tv73 = -240						; size = 4
tv74 = -236						; size = 4
$T100932 = -228						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z PROC ; std::tr1::shared_ptr<libusb_device_handle>::reset<libusb_device_handle,LibUSB::DeviceHandleDeleter>, COMDAT
; _this$ = ecx
; Line 1612
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1614
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	movzx	ecx, BYTE PTR __Dt$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Px$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T100932[ebp]
	call	??$?0Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle><libusb_device_handle,LibUSB::DeviceHandleDeleter>
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv73[ebp]
	call	?swap@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::shared_ptr<libusb_device_handle>::swap
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T100932[ebp]
	call	??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
; Line 1615
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$0:
	lea	ecx, DWORD PTR $T100932[ebp]
	jmp	??1?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::shared_ptr<libusb_device_handle>::~shared_ptr<libusb_device_handle>
__ehhandler$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$reset@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ENDP ; std::tr1::shared_ptr<libusb_device_handle>::reset<libusb_device_handle,LibUSB::DeviceHandleDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; Line 689
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 690
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 691
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 692
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$allocator@_W@std@@@std@@YA$$QAV?$allocator@_W@0@AAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Debug_pointer@_W@std@@YAXPB_W0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z PROC		; std::_Debug_pointer<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 689
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 690
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin@2
; Line 691
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin@2:
; Line 692
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t>
_TEXT	ENDS
PUBLIC	?_Reset@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@_N@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reset@Ulibusb_device_descriptor@@@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
??$_Reset@Ulibusb_device_descriptor@@@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXABV012@@Z PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 1299
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1301
	push	0
	mov	eax, DWORD PTR __Other$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Other$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@_N@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset
; Line 1302
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Reset@Ulibusb_device_descriptor@@@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXABV012@@Z ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset<libusb_device_descriptor>
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z	; std::operator==<wchar_t,wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z PROC		; std::operator!=<wchar_t,wchar_t>, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ; std::operator==<wchar_t,wchar_t>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ENDP		; std::operator!=<wchar_t,wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T100968 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T100968[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T100968[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT
$T100977 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@_W@std@@YAPA_WIPA_W@Z PROC			; std::_Allocate<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T100977[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T100977[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@_W@std@@YAPA_WIPA_W@Z ENDP			; std::_Allocate<wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T100980 = -220						; size = 12
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@3
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@3
$LN4@Allocate@3:
; Line 36
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate@3
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@3
$LN1@Allocate@3:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T100980[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T100980[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Allocate@3:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@3:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?_Swap@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::_Ptr_base<libusb_device>::_Swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z PROC ; std::tr1::shared_ptr<libusb_device>::swap, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 1628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1629
	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::_Ptr_base<libusb_device>::_Swap
; Line 1630
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z ENDP ; std::tr1::shared_ptr<libusb_device>::swap
_TEXT	ENDS
PUBLIC	?_Swap@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::_Ptr_base<libusb_device_handle>::_Swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z PROC ; std::tr1::shared_ptr<libusb_device_handle>::swap, COMDAT
; _this$ = ecx
; Line 1628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1629
	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::_Ptr_base<libusb_device_handle>::_Swap
; Line 1630
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z ENDP ; std::tr1::shared_ptr<libusb_device_handle>::swap
_TEXT	ENDS
PUBLIC	?_Swap@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Swap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other$ = 8						; size = 4
?swap@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::swap, COMDAT
; _this$ = ecx
; Line 1628
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1629
	mov	eax, DWORD PTR __Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Swap
; Line 1630
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::swap
_TEXT	ENDS
PUBLIC	__TI2?AVbad_weak_ptr@tr1@std@@
PUBLIC	??0bad_weak_ptr@tr1@std@@QAE@PBD@Z		; std::tr1::bad_weak_ptr::bad_weak_ptr
PUBLIC	?_Reset0@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset0
PUBLIC	?_Incref_nz@_Ref_count_base@tr1@std@@QAE_NXZ	; std::tr1::_Ref_count_base::_Incref_nz
PUBLIC	??1bad_weak_ptr@tr1@std@@UAE@XZ			; std::tr1::bad_weak_ptr::~bad_weak_ptr
PUBLIC	__CTA2?AVbad_weak_ptr@tr1@std@@
PUBLIC	__CT??_R0?AVbad_weak_ptr@tr1@std@@@8??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z12
PUBLIC	??_R0?AVbad_weak_ptr@tr1@std@@@8		; std::tr1::bad_weak_ptr `RTTI Type Descriptor'
PUBLIC	??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z		; std::tr1::bad_weak_ptr::bad_weak_ptr
;	COMDAT ??_R0?AVbad_weak_ptr@tr1@std@@@8
_DATA	SEGMENT
??_R0?AVbad_weak_ptr@tr1@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::tr1::bad_weak_ptr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_weak_ptr@tr1@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_weak_ptr@tr1@std@@@8??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_weak_ptr@tr1@std@@@8??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_weak_ptr@tr1@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_weak_ptr@tr1@std@@
xdata$x	SEGMENT
__CTA2?AVbad_weak_ptr@tr1@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_weak_ptr@tr1@std@@@8??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_weak_ptr@tr1@std@@
xdata$x	SEGMENT
__TI2?AVbad_weak_ptr@tr1@std@@ DD 00H
	DD	FLAT:??1bad_weak_ptr@tr1@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_weak_ptr@tr1@std@@
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Reset@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@_N@Z
_TEXT	SEGMENT
$T100992 = -220						; size = 12
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
__Throw$ = 16						; size = 1
?_Reset@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@_N@Z PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset, COMDAT
; _this$ = ecx
; Line 1357
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1360
	cmp	DWORD PTR __Other_rep$[ebp], 0
	je	SHORT $LN3@Reset
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	call	?_Incref_nz@_Ref_count_base@tr1@std@@QAE_NXZ ; std::tr1::_Ref_count_base::_Incref_nz
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Reset
; Line 1361
	mov	eax, DWORD PTR __Other_rep$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset0
	jmp	SHORT $LN5@Reset
$LN3@Reset:
; Line 1362
	movzx	eax, BYTE PTR __Throw$[ebp]
	test	eax, eax
	je	SHORT $LN5@Reset
; Line 1363
	push	0
	lea	ecx, DWORD PTR $T100992[ebp]
	call	??0bad_weak_ptr@tr1@std@@QAE@PBD@Z	; std::tr1::bad_weak_ptr::bad_weak_ptr
	push	OFFSET __TI2?AVbad_weak_ptr@tr1@std@@
	lea	eax, DWORD PTR $T100992[ebp]
	push	eax
	call	__CxxThrowException@8
$LN5@Reset:
; Line 1364
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Reset@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@_N@Z ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset
_TEXT	ENDS
PUBLIC	??_7bad_weak_ptr@tr1@std@@6B@			; std::tr1::bad_weak_ptr::`vftable'
PUBLIC	??_R4bad_weak_ptr@tr1@std@@6B@			; std::tr1::bad_weak_ptr::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_weak_ptr@tr1@std@@8			; std::tr1::bad_weak_ptr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_weak_ptr@tr1@std@@8			; std::tr1::bad_weak_ptr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_weak_ptr@tr1@std@@8		; std::tr1::bad_weak_ptr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@bad_weak_ptr@tr1@std@@UBEPBDXZ		; std::tr1::bad_weak_ptr::what
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Ebad_weak_ptr@tr1@std@@UAEPAXI@Z:PROC	; std::tr1::bad_weak_ptr::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@bad_weak_ptr@tr1@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_weak_ptr@tr1@std@@8 DD FLAT:??_R0?AVbad_weak_ptr@tr1@std@@@8 ; std::tr1::bad_weak_ptr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_weak_ptr@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_weak_ptr@tr1@std@@8
rdata$r	SEGMENT
??_R2bad_weak_ptr@tr1@std@@8 DD FLAT:??_R1A@?0A@EA@bad_weak_ptr@tr1@std@@8 ; std::tr1::bad_weak_ptr::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_weak_ptr@tr1@std@@8
rdata$r	SEGMENT
??_R3bad_weak_ptr@tr1@std@@8 DD 00H			; std::tr1::bad_weak_ptr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_weak_ptr@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_weak_ptr@tr1@std@@6B@
rdata$r	SEGMENT
??_R4bad_weak_ptr@tr1@std@@6B@ DD 00H			; std::tr1::bad_weak_ptr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_weak_ptr@tr1@std@@@8
	DD	FLAT:??_R3bad_weak_ptr@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_weak_ptr@tr1@std@@6B@
CONST	SEGMENT
??_7bad_weak_ptr@tr1@std@@6B@ DD FLAT:??_R4bad_weak_ptr@tr1@std@@6B@ ; std::tr1::bad_weak_ptr::`vftable'
	DD	FLAT:??_Ebad_weak_ptr@tr1@std@@UAEPAXI@Z
	DD	FLAT:?what@bad_weak_ptr@tr1@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0bad_weak_ptr@tr1@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0bad_weak_ptr@tr1@std@@QAE@PBD@Z PROC			; std::tr1::bad_weak_ptr::bad_weak_ptr, COMDAT
; _this$ = ecx
; Line 1009
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_weak_ptr@tr1@std@@6B@
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_weak_ptr@tr1@std@@QAE@PBD@Z ENDP			; std::tr1::bad_weak_ptr::bad_weak_ptr
_TEXT	ENDS
PUBLIC	??_C@_0BC@MOGJFHKK@tr1?3?3bad_weak_ptr?$AA@	; `string'
;	COMDAT ??_C@_0BC@MOGJFHKK@tr1?3?3bad_weak_ptr?$AA@
CONST	SEGMENT
??_C@_0BC@MOGJFHKK@tr1?3?3bad_weak_ptr?$AA@ DB 'tr1::bad_weak_ptr', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?what@bad_weak_ptr@tr1@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?what@bad_weak_ptr@tr1@std@@UBEPBDXZ PROC		; std::tr1::bad_weak_ptr::what, COMDAT
; _this$ = ecx
; Line 1014
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, OFFSET ??_C@_0BC@MOGJFHKK@tr1?3?3bad_weak_ptr?$AA@
; Line 1016
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?what@bad_weak_ptr@tr1@std@@UBEPBDXZ ENDP		; std::tr1::bad_weak_ptr::what
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_weak_ptr@tr1@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_weak_ptr@tr1@std@@UAEPAXI@Z PROC		; std::tr1::bad_weak_ptr::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_weak_ptr@tr1@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_weak_ptr@tr1@std@@UAEPAXI@Z ENDP		; std::tr1::bad_weak_ptr::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1bad_weak_ptr@tr1@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_weak_ptr@tr1@std@@UAE@XZ PROC			; std::tr1::bad_weak_ptr::~bad_weak_ptr, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_weak_ptr@tr1@std@@UAE@XZ ENDP			; std::tr1::bad_weak_ptr::~bad_weak_ptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Incref_nz@_Ref_count_base@tr1@std@@QAE_NXZ
_TEXT	SEGMENT
__Count$80428 = -20					; size = 4
_this$ = -8						; size = 4
?_Incref_nz@_Ref_count_base@tr1@std@@QAE_NXZ PROC	; std::tr1::_Ref_count_base::_Incref_nz, COMDAT
; _this$ = ecx
; Line 1041
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN4@Incref_nz:
; Line 1044
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Count$80428[ebp], ecx
; Line 1045
	cmp	DWORD PTR __Count$80428[ebp], 0
	jne	SHORT $LN2@Incref_nz
; Line 1046
	xor	al, al
	jmp	SHORT $LN5@Incref_nz
$LN2@Incref_nz:
; Line 1047
	mov	eax, DWORD PTR __Count$80428[ebp]
	mov	ecx, DWORD PTR __Count$80428[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	lock	 cmpxchg DWORD PTR [edx], ecx
	cmp	eax, DWORD PTR __Count$80428[ebp]
	jne	SHORT $LN1@Incref_nz
; Line 1048
	mov	al, 1
	jmp	SHORT $LN5@Incref_nz
$LN1@Incref_nz:
; Line 1049
	jmp	SHORT $LN4@Incref_nz
$LN5@Incref_nz:
; Line 1050
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Incref_nz@_Ref_count_base@tr1@std@@QAE_NXZ ENDP	; std::tr1::_Ref_count_base::_Incref_nz
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T101007 = -236						; size = 4
$T101008 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T101008[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T101008[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T101008[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T101008[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T101007[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T101008[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z PROC		; std::tr1::bad_weak_ptr::bad_weak_ptr, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_weak_ptr@tr1@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_weak_ptr@tr1@std@@QAE@ABV012@@Z ENDP		; std::tr1::bad_weak_ptr::bad_weak_ptr
_TEXT	ENDS
PUBLIC	??$swap@PAUlibusb_device@@@std@@YAXAAPAUlibusb_device@@0@Z ; std::swap<libusb_device *>
PUBLIC	??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z ; std::swap<std::tr1::_Ref_count_base *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z PROC ; std::tr1::_Ptr_base<libusb_device>::_Swap, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 1261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1262
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z ; std::swap<std::tr1::_Ref_count_base *>
	add	esp, 8
; Line 1263
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$swap@PAUlibusb_device@@@std@@YAXAAPAUlibusb_device@@0@Z ; std::swap<libusb_device *>
	add	esp, 8
; Line 1264
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXAAV123@@Z ENDP ; std::tr1::_Ptr_base<libusb_device>::_Swap
_TEXT	ENDS
PUBLIC	??$swap@PAUlibusb_device_handle@@@std@@YAXAAPAUlibusb_device_handle@@0@Z ; std::swap<libusb_device_handle *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z PROC ; std::tr1::_Ptr_base<libusb_device_handle>::_Swap, COMDAT
; _this$ = ecx
; Line 1261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1262
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z ; std::swap<std::tr1::_Ref_count_base *>
	add	esp, 8
; Line 1263
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$swap@PAUlibusb_device_handle@@@std@@YAXAAPAUlibusb_device_handle@@0@Z ; std::swap<libusb_device_handle *>
	add	esp, 8
; Line 1264
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXAAV123@@Z ENDP ; std::tr1::_Ptr_base<libusb_device_handle>::_Swap
_TEXT	ENDS
PUBLIC	??$swap@PAUlibusb_device_descriptor@@@std@@YAXAAPAUlibusb_device_descriptor@@0@Z ; std::swap<libusb_device_descriptor *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Swap, COMDAT
; _this$ = ecx
; Line 1261
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1262
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z ; std::swap<std::tr1::_Ref_count_base *>
	add	esp, 8
; Line 1263
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$swap@PAUlibusb_device_descriptor@@@std@@YAXAAPAUlibusb_device_descriptor@@0@Z ; std::swap<libusb_device_descriptor *>
	add	esp, 8
; Line 1264
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXAAV123@@Z ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Swap
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Reset0@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@@Z PROC ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset0, COMDAT
; _this$ = ecx
; Line 1367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1368
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Reset0
; Line 1369
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decref
$LN1@Reset0:
; Line 1370
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1371
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@@Z ENDP ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset0
_TEXT	ENDS
PUBLIC	??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device>::_Resetp<libusb_device,LibUSB::DeviceDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$?0Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z PROC ; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device><libusb_device,LibUSB::DeviceDeleter>, COMDAT
; _this$ = ecx
; Line 1436
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device>::_Ptr_base<libusb_device>
; Line 1438
	movzx	eax, BYTE PTR __Dt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device>::_Resetp<libusb_device,LibUSB::DeviceDeleter>
; Line 1439
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ENDP ; std::tr1::shared_ptr<libusb_device>::shared_ptr<libusb_device><libusb_device,LibUSB::DeviceDeleter>
_TEXT	ENDS
PUBLIC	??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
??$?0Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor><libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Ptr_base<libusb_device_descriptor>
; Line 1431
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp<libusb_device_descriptor>
; Line 1432
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::shared_ptr<libusb_device_descriptor><libusb_device_descriptor>
_TEXT	ENDS
PUBLIC	??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp<libusb_device_handle,LibUSB::DeviceHandleDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$?0Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z PROC ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle><libusb_device_handle,LibUSB::DeviceHandleDeleter>, COMDAT
; _this$ = ecx
; Line 1436
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAE@XZ ; std::tr1::_Ptr_base<libusb_device_handle>::_Ptr_base<libusb_device_handle>
; Line 1438
	movzx	eax, BYTE PTR __Dt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp<libusb_device_handle,LibUSB::DeviceHandleDeleter>
; Line 1439
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ENDP ; std::tr1::shared_ptr<libusb_device_handle>::shared_ptr<libusb_device_handle><libusb_device_handle,LibUSB::DeviceHandleDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 263
	mov	al, 1
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z PROC		; std::operator==<wchar_t,wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 263
	mov	al, 1
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z ENDP		; std::operator==<wchar_t,wchar_t>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z ; std::_Move<std::tr1::_Ref_count_base * &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z PROC ; std::swap<std::tr1::_Ref_count_base *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z ; std::_Move<std::tr1::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z ; std::_Move<std::tr1::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 104
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z ; std::_Move<std::tr1::_Ref_count_base * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAV_Ref_count_base@tr1@std@@@std@@YAXAAPAV_Ref_count_base@tr1@0@0@Z ENDP ; std::swap<std::tr1::_Ref_count_base *>
_TEXT	ENDS
PUBLIC	??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z ; std::_Move<libusb_device * &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$swap@PAUlibusb_device@@@std@@YAXAAPAUlibusb_device@@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAUlibusb_device@@@std@@YAXAAPAUlibusb_device@@0@Z PROC ; std::swap<libusb_device *>, COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z ; std::_Move<libusb_device * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z ; std::_Move<libusb_device * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 104
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z ; std::_Move<libusb_device * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap@2:
	DD	1
	DD	$LN4@swap@2
$LN4@swap@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap@2
$LN3@swap@2:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAUlibusb_device@@@std@@YAXAAPAUlibusb_device@@0@Z ENDP ; std::swap<libusb_device *>
_TEXT	ENDS
PUBLIC	??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z ; std::_Move<libusb_device_handle * &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$swap@PAUlibusb_device_handle@@@std@@YAXAAPAUlibusb_device_handle@@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAUlibusb_device_handle@@@std@@YAXAAPAUlibusb_device_handle@@0@Z PROC ; std::swap<libusb_device_handle *>, COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z ; std::_Move<libusb_device_handle * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z ; std::_Move<libusb_device_handle * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 104
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z ; std::_Move<libusb_device_handle * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap@3:
	DD	1
	DD	$LN4@swap@3
$LN4@swap@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap@3
$LN3@swap@3:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAUlibusb_device_handle@@@std@@YAXAAPAUlibusb_device_handle@@0@Z ENDP ; std::swap<libusb_device_handle *>
_TEXT	ENDS
PUBLIC	??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z ; std::_Move<libusb_device_descriptor * &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$swap@PAUlibusb_device_descriptor@@@std@@YAXAAPAUlibusb_device_descriptor@@0@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAUlibusb_device_descriptor@@@std@@YAXAAPAUlibusb_device_descriptor@@0@Z PROC ; std::swap<libusb_device_descriptor *>, COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z ; std::_Move<libusb_device_descriptor * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z ; std::_Move<libusb_device_descriptor * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 104
	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z ; std::_Move<libusb_device_descriptor * &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@swap@4:
	DD	1
	DD	$LN4@swap@4
$LN4@swap@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@swap@4
$LN3@swap@4:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@PAUlibusb_device_descriptor@@@std@@YAXAAPAUlibusb_device_descriptor@@0@Z ENDP ; std::swap<libusb_device_descriptor *>
_TEXT	ENDS
PUBLIC	??RDeviceDeleter@LibUSB@@QAEXPAUlibusb_device@@@Z ; LibUSB::DeviceDeleter::operator()
PUBLIC	??$_Resetp0@Ulibusb_device@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@12@@Z ; std::tr1::shared_ptr<libusb_device>::_Resetp0<libusb_device>
PUBLIC	??0?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__catchsym$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$0
__tryblocktable$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$3
__unwindtable$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
_TEXT	SEGMENT
tv77 = -256						; size = 4
tv88 = -252						; size = 4
tv86 = -248						; size = 4
$T101071 = -240						; size = 4
$T101072 = -228						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z PROC ; std::tr1::shared_ptr<libusb_device>::_Resetp<libusb_device,LibUSB::DeviceDeleter>, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1673
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1674
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T101072[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T101072[ebp], 0
	je	SHORT $LN4@Resetp
	movzx	ecx, BYTE PTR __Dt$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Px$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T101072[ebp]
	call	??0?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>
	mov	DWORD PTR tv88[ebp], eax
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Resetp
$LN4@Resetp:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Resetp:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T101071[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR $T101071[ebp]
	push	edx
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp0@Ulibusb_device@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@12@@Z ; std::tr1::shared_ptr<libusb_device>::_Resetp0<libusb_device>
	jmp	SHORT $LN6@Resetp
__catch$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$0:
; Line 1676
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dt$[ebp]
	call	??RDeviceDeleter@LibUSB@@QAEXPAUlibusb_device@@@Z ; LibUSB::DeviceDeleter::operator()
; Line 1677
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1678
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN3@Resetp
	ret	0
$LN6@Resetp:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Resetp:
; Line 1679
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z$2:
	mov	eax, DWORD PTR $T101072[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Resetp@Ulibusb_device@@VDeviceDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@AAEXPAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ENDP ; std::tr1::shared_ptr<libusb_device>::_Resetp<libusb_device,LibUSB::DeviceDeleter>
EXTRN	_libusb_unref_device@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??RDeviceDeleter@LibUSB@@QAEXPAUlibusb_device@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dev$ = 8						; size = 4
??RDeviceDeleter@LibUSB@@QAEXPAUlibusb_device@@@Z PROC	; LibUSB::DeviceDeleter::operator(), COMDAT
; _this$ = ecx
; File d:\workspace\libusb++\src\deviceimpl.h
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dev$[ebp]
	push	eax
	call	_libusb_unref_device@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??RDeviceDeleter@LibUSB@@QAEXPAUlibusb_device@@@Z ENDP	; LibUSB::DeviceDeleter::operator()
_TEXT	ENDS
PUBLIC	??$_Resetp0@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@12@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp0<libusb_device_descriptor>
PUBLIC	??0?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z ; std::tr1::_Ref_count<libusb_device_descriptor>::_Ref_count<libusb_device_descriptor>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__catchsym$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z$0
__tryblocktable$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z$3
__unwindtable$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z
_TEXT	SEGMENT
tv76 = -268						; size = 4
tv86 = -264						; size = 4
tv84 = -260						; size = 4
$T101093 = -252						; size = 4
$T101094 = -240						; size = 4
$T101097 = -228						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Px$ = 8						; size = 4
??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1659
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1661
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1662
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T101094[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T101094[ebp], 0
	je	SHORT $LN4@Resetp@2
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T101094[ebp]
	call	??0?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z ; std::tr1::_Ref_count<libusb_device_descriptor>::_Ref_count<libusb_device_descriptor>
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN5@Resetp@2
$LN4@Resetp@2:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Resetp@2:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T101093[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR $T101093[ebp]
	push	ecx
	mov	edx, DWORD PTR __Px$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp0@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@12@@Z ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp0<libusb_device_descriptor>
	jmp	SHORT $LN6@Resetp@2
__catch$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z$0:
; Line 1664
	mov	eax, DWORD PTR __Px$[ebp]
	mov	DWORD PTR $T101097[ebp], eax
	mov	ecx, DWORD PTR $T101097[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 1665
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1666
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN3@Resetp@2
	ret	0
$LN6@Resetp@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Resetp@2:
; Line 1667
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z$2:
	mov	eax, DWORD PTR $T101094[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Resetp@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@AAEXPAUlibusb_device_descriptor@@@Z ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp<libusb_device_descriptor>
PUBLIC	??RDeviceHandleDeleter@LibUSB@@QAEXPAUlibusb_device_handle@@@Z ; LibUSB::DeviceHandleDeleter::operator()
PUBLIC	??$_Resetp0@Ulibusb_device_handle@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@12@@Z ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp0<libusb_device_handle>
PUBLIC	??0?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$0
__tryblocktable$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$3
__unwindtable$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
_TEXT	SEGMENT
tv77 = -256						; size = 4
tv88 = -252						; size = 4
tv86 = -248						; size = 4
$T101114 = -240						; size = 4
$T101115 = -228						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z PROC ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp<libusb_device_handle,LibUSB::DeviceHandleDeleter>, COMDAT
; _this$ = ecx
; Line 1671
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1673
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1674
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T101115[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T101115[ebp], 0
	je	SHORT $LN4@Resetp@3
	movzx	ecx, BYTE PTR __Dt$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Px$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T101115[ebp]
	call	??0?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>
	mov	DWORD PTR tv88[ebp], eax
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Resetp@3
$LN4@Resetp@3:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Resetp@3:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T101114[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR $T101114[ebp]
	push	edx
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resetp0@Ulibusb_device_handle@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@12@@Z ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp0<libusb_device_handle>
	jmp	SHORT $LN6@Resetp@3
__catch$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$0:
; Line 1676
	mov	eax, DWORD PTR __Px$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dt$[ebp]
	call	??RDeviceHandleDeleter@LibUSB@@QAEXPAUlibusb_device_handle@@@Z ; LibUSB::DeviceHandleDeleter::operator()
; Line 1677
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1678
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN3@Resetp@3
	ret	0
$LN6@Resetp@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Resetp@3:
; Line 1679
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z$2:
	mov	eax, DWORD PTR $T101115[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Resetp@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@AAEXPAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ENDP ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp<libusb_device_handle,LibUSB::DeviceHandleDeleter>
EXTRN	_libusb_close@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??RDeviceHandleDeleter@LibUSB@@QAEXPAUlibusb_device_handle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_devhandle$ = 8						; size = 4
??RDeviceHandleDeleter@LibUSB@@QAEXPAUlibusb_device_handle@@@Z PROC ; LibUSB::DeviceHandleDeleter::operator(), COMDAT
; _this$ = ecx
; File d:\workspace\libusb++\src\deviceimpl.h
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _devhandle$[ebp]
	push	eax
	call	_libusb_close@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??RDeviceHandleDeleter@LibUSB@@QAEXPAUlibusb_device_handle@@@Z ENDP ; LibUSB::DeviceHandleDeleter::operator()
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z PROC ; std::_Move<std::tr1::_Ref_count_base * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@AAPAV_Ref_count_base@tr1@std@@@std@@YA$$QAPAV_Ref_count_base@tr1@0@AAPAV120@@Z ENDP ; std::_Move<std::tr1::_Ref_count_base * &>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z PROC ; std::_Move<libusb_device * &>, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@AAPAUlibusb_device@@@std@@YA$$QAPAUlibusb_device@@AAPAU1@@Z ENDP ; std::_Move<libusb_device * &>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z PROC ; std::_Move<libusb_device_handle * &>, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@AAPAUlibusb_device_handle@@@std@@YA$$QAPAUlibusb_device_handle@@AAPAU1@@Z ENDP ; std::_Move<libusb_device_handle * &>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z PROC ; std::_Move<libusb_device_descriptor * &>, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@AAPAUlibusb_device_descriptor@@@std@@YA$$QAPAUlibusb_device_descriptor@@AAPAU1@@Z ENDP ; std::_Move<libusb_device_descriptor * &>
_TEXT	ENDS
PUBLIC	??_7?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`vftable'
PUBLIC	??0_Ref_count_base@tr1@std@@IAE@XZ		; std::tr1::_Ref_count_base::_Ref_count_base
PUBLIC	??_R4?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@@8 ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8	; std::tr1::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Ref_count_base@tr1@std@@@8		; std::tr1::_Ref_count_base `RTTI Type Descriptor'
PUBLIC	??_R3_Ref_count_base@tr1@std@@8			; std::tr1::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Ref_count_base@tr1@std@@8			; std::tr1::_Ref_count_base::`RTTI Base Class Array'
PUBLIC	?_Destroy@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Delete_this
PUBLIC	?_Get_deleter@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Get_deleter
EXTRN	??_E?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z:PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`vector deleting destructor'
;	COMDAT ??_R2_Ref_count_base@tr1@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
rdata$r	SEGMENT
??_R2_Ref_count_base@tr1@std@@8 DD FLAT:??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8 ; std::tr1::_Ref_count_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_Ref_count_base@tr1@std@@8
rdata$r	SEGMENT
??_R3_Ref_count_base@tr1@std@@8 DD 00H			; std::tr1::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Ref_count_base@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Ref_count_base@tr1@std@@@8
_DATA	SEGMENT
??_R0?AV_Ref_count_base@tr1@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::tr1::_Ref_count_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Ref_count_base@tr1@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8 DD FLAT:??_R0?AV_Ref_count_base@tr1@std@@@8 ; std::tr1::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Ref_count_base@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 DD FLAT:??_R0?AV?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@@8 ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8 DD 00H ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibU'
	DB	'SB@@@tr1@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@ DD 00H ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@@8
	DD	FLAT:??_R3?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@ DD FLAT:??_R4?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??0?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>, COMDAT
; _this$ = ecx
; Line 1126
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@tr1@std@@IAE@XZ	; std::tr1::_Ref_count_base::_Ref_count_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Px$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1127
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device@@VDeviceDeleter@LibUSB@@@Z ENDP ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>
_TEXT	ENDS
PUBLIC	??_7_Ref_count_base@tr1@std@@6B@		; std::tr1::_Ref_count_base::`vftable'
PUBLIC	??_R4_Ref_count_base@tr1@std@@6B@		; std::tr1::_Ref_count_base::`RTTI Complete Object Locator'
PUBLIC	?_Get_deleter@_Ref_count_base@tr1@std@@UBEPAXABVtype_info@@@Z ; std::tr1::_Ref_count_base::_Get_deleter
EXTRN	__purecall:PROC
EXTRN	??_E_Ref_count_base@tr1@std@@UAEPAXI@Z:PROC	; std::tr1::_Ref_count_base::`vector deleting destructor'
;	COMDAT ??_R4_Ref_count_base@tr1@std@@6B@
rdata$r	SEGMENT
??_R4_Ref_count_base@tr1@std@@6B@ DD 00H		; std::tr1::_Ref_count_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Ref_count_base@tr1@std@@@8
	DD	FLAT:??_R3_Ref_count_base@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_7_Ref_count_base@tr1@std@@6B@
CONST	SEGMENT
??_7_Ref_count_base@tr1@std@@6B@ DD FLAT:??_R4_Ref_count_base@tr1@std@@6B@ ; std::tr1::_Ref_count_base::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E_Ref_count_base@tr1@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@tr1@std@@UBEPAXABVtype_info@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0_Ref_count_base@tr1@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Ref_count_base@tr1@std@@IAE@XZ PROC			; std::tr1::_Ref_count_base::_Ref_count_base, COMDAT
; _this$ = ecx
; Line 1032
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Ref_count_base@tr1@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 1
; Line 1033
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ref_count_base@tr1@std@@IAE@XZ ENDP			; std::tr1::_Ref_count_base::_Ref_count_base
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Get_deleter@_Ref_count_base@tr1@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?_Get_deleter@_Ref_count_base@tr1@std@@UBEPAXABVtype_info@@@Z PROC ; std::tr1::_Ref_count_base::_Get_deleter, COMDAT
; _this$ = ecx
; Line 1088
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1089
	xor	eax, eax
; Line 1090
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_deleter@_Ref_count_base@tr1@std@@UBEPAXABVtype_info@@@Z ENDP ; std::tr1::_Ref_count_base::_Get_deleter
_TEXT	ENDS
PUBLIC	??1_Ref_count_base@tr1@std@@UAE@XZ		; std::tr1::_Ref_count_base::~_Ref_count_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Ref_count_base@tr1@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Ref_count_base@tr1@std@@UAEPAXI@Z PROC		; std::tr1::_Ref_count_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@tr1@std@@UAE@XZ	; std::tr1::_Ref_count_base::~_Ref_count_base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Ref_count_base@tr1@std@@UAEPAXI@Z ENDP		; std::tr1::_Ref_count_base::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1_Ref_count_base@tr1@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Ref_count_base@tr1@std@@UAE@XZ PROC			; std::tr1::_Ref_count_base::~_Ref_count_base, COMDAT
; _this$ = ecx
; Line 1037
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Ref_count_base@tr1@std@@6B@
; Line 1038
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Ref_count_base@tr1@std@@UAE@XZ ENDP			; std::tr1::_Ref_count_base::~_Ref_count_base
_TEXT	ENDS
PUBLIC	??_R0?AVDeviceDeleter@LibUSB@@@8		; LibUSB::DeviceDeleter `RTTI Type Descriptor'
EXTRN	__imp_??8type_info@@QBE_NABV0@@Z:PROC
;	COMDAT ??_R0?AVDeviceDeleter@LibUSB@@@8
_DATA	SEGMENT
??_R0?AVDeviceDeleter@LibUSB@@@8 DD FLAT:??_7type_info@@6B@ ; LibUSB::DeviceDeleter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDeviceDeleter@LibUSB@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?_Get_deleter@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
__Type$ = 8						; size = 4
?_Get_deleter@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Get_deleter, COMDAT
; _this$ = ecx
; Line 1130
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1131
	mov	esi, esp
	push	OFFSET ??_R0?AVDeviceDeleter@LibUSB@@@8
	mov	ecx, DWORD PTR __Type$[ebp]
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Get_delete
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN4@Get_delete
$LN3@Get_delete:
	mov	DWORD PTR tv70[ebp], 0
$LN4@Get_delete:
	mov	eax, DWORD PTR tv70[ebp]
; Line 1132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_deleter@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z ENDP ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Get_deleter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Destroy@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Destroy@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Destroy, COMDAT
; _this$ = ecx
; Line 1136
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??RDeviceDeleter@LibUSB@@QAEXPAUlibusb_device@@@Z ; LibUSB::DeviceDeleter::operator()
; Line 1138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Destroy@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ ENDP ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Delete_this@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T101161 = -224						; size = 4
$T101162 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Delete_this, COMDAT
; _this$ = ecx
; Line 1141
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1142
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T101162[ebp], eax
	mov	ecx, DWORD PTR $T101162[ebp]
	mov	DWORD PTR $T101161[ebp], ecx
	cmp	DWORD PTR $T101161[ebp], 0
	je	SHORT $LN3@Delete_thi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T101161[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T101161[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@Delete_thi
$LN3@Delete_thi:
	mov	DWORD PTR tv74[ebp], 0
$LN1@Delete_thi:
; Line 1143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@EAEXXZ ENDP ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::_Delete_this
_TEXT	ENDS
PUBLIC	??_7?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@ ; std::tr1::_Ref_count<libusb_device_descriptor>::`vftable'
PUBLIC	??_R4?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@ ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@@8 ; std::tr1::_Ref_count<libusb_device_descriptor> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_Destroy@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ ; std::tr1::_Ref_count<libusb_device_descriptor>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ ; std::tr1::_Ref_count<libusb_device_descriptor>::_Delete_this
EXTRN	??_E?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAEPAXI@Z:PROC ; std::tr1::_Ref_count<libusb_device_descriptor>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 DD FLAT:??_R0?AV?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@@8 ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8 DD 00H ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::tr1::_Ref_count<libusb_device_descriptor> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@ DD 00H ; std::tr1::_Ref_count<libusb_device_descriptor>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@@8
	DD	FLAT:??_R3?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@ DD FLAT:??_R4?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@ ; std::tr1::_Ref_count<libusb_device_descriptor>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@_Ref_count_base@tr1@std@@UBEPAXABVtype_info@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
??0?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z PROC ; std::tr1::_Ref_count<libusb_device_descriptor>::_Ref_count<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1101
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@tr1@std@@IAE@XZ	; std::tr1::_Ref_count_base::_Ref_count_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Px$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1102
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@QAE@PAUlibusb_device_descriptor@@@Z ENDP ; std::tr1::_Ref_count<libusb_device_descriptor>::_Ref_count<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Destroy@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ
_TEXT	SEGMENT
$T101170 = -212						; size = 4
_this$ = -8						; size = 4
?_Destroy@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ PROC ; std::tr1::_Ref_count<libusb_device_descriptor>::_Destroy, COMDAT
; _this$ = ecx
; Line 1106
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T101170[ebp], ecx
	mov	edx, DWORD PTR $T101170[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 1108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Destroy@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ ENDP ; std::tr1::_Ref_count<libusb_device_descriptor>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Delete_this@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T101173 = -224						; size = 4
$T101174 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ PROC ; std::tr1::_Ref_count<libusb_device_descriptor>::_Delete_this, COMDAT
; _this$ = ecx
; Line 1111
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1112
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T101174[ebp], eax
	mov	ecx, DWORD PTR $T101174[ebp]
	mov	DWORD PTR $T101173[ebp], ecx
	cmp	DWORD PTR $T101173[ebp], 0
	je	SHORT $LN3@Delete_thi@2
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T101173[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T101173[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@Delete_thi@2
$LN3@Delete_thi@2:
	mov	DWORD PTR tv74[ebp], 0
$LN1@Delete_thi@2:
; Line 1113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@EAEXXZ ENDP ; std::tr1::_Ref_count<libusb_device_descriptor>::_Delete_this
_TEXT	ENDS
PUBLIC	??_7?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`vftable'
PUBLIC	??_R4?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@@8 ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_Destroy@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Delete_this
PUBLIC	?_Get_deleter@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Get_deleter
EXTRN	??_E?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z:PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 DD FLAT:??_R0?AV?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@@8 ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Ref_count_base@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8 DD 00H ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandl'
	DB	'eDeleter@LibUSB@@@tr1@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@ DD 00H ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@@8
	DD	FLAT:??_R3?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@ DD FLAT:??_R4?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`vftable'
	DD	FLAT:?_Destroy@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ
	DD	FLAT:?_Delete_this@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ
	DD	FLAT:??_E?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z
	DD	FLAT:?_Get_deleter@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Dt$ = 12						; size = 1
??0?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>, COMDAT
; _this$ = ecx
; Line 1126
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Ref_count_base@tr1@std@@IAE@XZ	; std::tr1::_Ref_count_base::_Ref_count_base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Px$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1127
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@QAE@PAUlibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@Z ENDP ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>
_TEXT	ENDS
PUBLIC	??_R0?AVDeviceHandleDeleter@LibUSB@@@8		; LibUSB::DeviceHandleDeleter `RTTI Type Descriptor'
;	COMDAT ??_R0?AVDeviceHandleDeleter@LibUSB@@@8
_DATA	SEGMENT
??_R0?AVDeviceHandleDeleter@LibUSB@@@8 DD FLAT:??_7type_info@@6B@ ; LibUSB::DeviceHandleDeleter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDeviceHandleDeleter@LibUSB@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?_Get_deleter@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
__Type$ = 8						; size = 4
?_Get_deleter@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Get_deleter, COMDAT
; _this$ = ecx
; Line 1130
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1131
	mov	esi, esp
	push	OFFSET ??_R0?AVDeviceHandleDeleter@LibUSB@@@8
	mov	ecx, DWORD PTR __Type$[ebp]
	call	DWORD PTR __imp_??8type_info@@QBE_NABV0@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Get_delete@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv70[ebp], ecx
	jmp	SHORT $LN4@Get_delete@2
$LN3@Get_delete@2:
	mov	DWORD PTR tv70[ebp], 0
$LN4@Get_delete@2:
	mov	eax, DWORD PTR tv70[ebp]
; Line 1132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Get_deleter@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UBEPAXABVtype_info@@@Z ENDP ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Get_deleter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Destroy@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Destroy@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Destroy, COMDAT
; _this$ = ecx
; Line 1136
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??RDeviceHandleDeleter@LibUSB@@QAEXPAUlibusb_device_handle@@@Z ; LibUSB::DeviceHandleDeleter::operator()
; Line 1138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Destroy@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ ENDP ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Destroy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Delete_this@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T101188 = -224						; size = 4
$T101189 = -212						; size = 4
_this$ = -8						; size = 4
?_Delete_this@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Delete_this, COMDAT
; _this$ = ecx
; Line 1141
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1142
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T101189[ebp], eax
	mov	ecx, DWORD PTR $T101189[ebp]
	mov	DWORD PTR $T101188[ebp], ecx
	cmp	DWORD PTR $T101188[ebp], 0
	je	SHORT $LN3@Delete_thi@3
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T101188[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T101188[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN1@Delete_thi@3
$LN3@Delete_thi@3:
	mov	DWORD PTR tv74[ebp], 0
$LN1@Delete_thi@3:
; Line 1143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Delete_this@?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@EAEXXZ ENDP ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::_Delete_this
_TEXT	ENDS
PUBLIC	??1?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAE@XZ ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::~_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z ENDP ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAE@XZ ; std::tr1::_Ref_count<libusb_device_descriptor>::~_Ref_count<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAEPAXI@Z PROC ; std::tr1::_Ref_count<libusb_device_descriptor>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAEPAXI@Z ENDP ; std::tr1::_Ref_count<libusb_device_descriptor>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAE@XZ ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::~_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAEPAXI@Z ENDP ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAE@XZ PROC ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::~_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@tr1@std@@UAE@XZ	; std::tr1::_Ref_count_base::~_Ref_count_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_del@Ulibusb_device@@VDeviceDeleter@LibUSB@@@tr1@std@@UAE@XZ ENDP ; std::tr1::_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>::~_Ref_count_del<libusb_device,LibUSB::DeviceDeleter>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAE@XZ PROC ; std::tr1::_Ref_count<libusb_device_descriptor>::~_Ref_count<libusb_device_descriptor>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@tr1@std@@UAE@XZ	; std::tr1::_Ref_count_base::~_Ref_count_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count@Ulibusb_device_descriptor@@@tr1@std@@UAE@XZ ENDP ; std::tr1::_Ref_count<libusb_device_descriptor>::~_Ref_count<libusb_device_descriptor>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAE@XZ PROC ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::~_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Ref_count_base@tr1@std@@UAE@XZ	; std::tr1::_Ref_count_base::~_Ref_count_base
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Ref_count_del@Ulibusb_device_handle@@VDeviceHandleDeleter@LibUSB@@@tr1@std@@UAE@XZ ENDP ; std::tr1::_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>::~_Ref_count_del<libusb_device_handle,LibUSB::DeviceHandleDeleter>
_TEXT	ENDS
PUBLIC	?_Enable_shared@tr1@std@@YAXPDX0@Z		; std::tr1::_Enable_shared
PUBLIC	?_Reset0@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device>::_Reset0
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Resetp0@Ulibusb_device@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@Ulibusb_device@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@12@@Z PROC ; std::tr1::shared_ptr<libusb_device>::_Resetp0<libusb_device>, COMDAT
; _this$ = ecx
; Line 1703
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1705
	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device>::_Reset0
; Line 1706
	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	call	?_Enable_shared@tr1@std@@YAXPDX0@Z	; std::tr1::_Enable_shared
	add	esp, 8
; Line 1707
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@Ulibusb_device@@@?$shared_ptr@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@12@@Z ENDP ; std::tr1::shared_ptr<libusb_device>::_Resetp0<libusb_device>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Enable_shared@tr1@std@@YAXPDX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Enable_shared@tr1@std@@YAXPDX0@Z PROC			; std::tr1::_Enable_shared, COMDAT
; Line 1212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1213
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Enable_shared@tr1@std@@YAXPDX0@Z ENDP			; std::tr1::_Enable_shared
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_Resetp0@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@12@@Z PROC ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp0<libusb_device_descriptor>, COMDAT
; _this$ = ecx
; Line 1703
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1705
	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device_descriptor>::_Reset0
; Line 1706
	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	call	?_Enable_shared@tr1@std@@YAXPDX0@Z	; std::tr1::_Enable_shared
	add	esp, 8
; Line 1707
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@Ulibusb_device_descriptor@@@?$shared_ptr@Ulibusb_device_descriptor@@@tr1@std@@QAEXPAUlibusb_device_descriptor@@PAV_Ref_count_base@12@@Z ENDP ; std::tr1::shared_ptr<libusb_device_descriptor>::_Resetp0<libusb_device_descriptor>
_TEXT	ENDS
PUBLIC	?_Reset0@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device_handle>::_Reset0
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Resetp0@Ulibusb_device_handle@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Px$ = 8						; size = 4
__Rx$ = 12						; size = 4
??$_Resetp0@Ulibusb_device_handle@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@12@@Z PROC ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp0<libusb_device_handle>, COMDAT
; _this$ = ecx
; Line 1703
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1705
	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reset0@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@23@@Z ; std::tr1::_Ptr_base<libusb_device_handle>::_Reset0
; Line 1706
	mov	eax, DWORD PTR __Rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Px$[ebp]
	push	ecx
	call	?_Enable_shared@tr1@std@@YAXPDX0@Z	; std::tr1::_Enable_shared
	add	esp, 8
; Line 1707
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resetp0@Ulibusb_device_handle@@@?$shared_ptr@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@12@@Z ENDP ; std::tr1::shared_ptr<libusb_device_handle>::_Resetp0<libusb_device_handle>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Reset0@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@23@@Z PROC ; std::tr1::_Ptr_base<libusb_device>::_Reset0, COMDAT
; _this$ = ecx
; Line 1367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1368
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Reset0@2
; Line 1369
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decref
$LN1@Reset0@2:
; Line 1370
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1371
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@Ulibusb_device@@@tr1@std@@QAEXPAUlibusb_device@@PAV_Ref_count_base@23@@Z ENDP ; std::tr1::_Ptr_base<libusb_device>::_Reset0
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Reset0@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@23@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Other_ptr$ = 8					; size = 4
__Other_rep$ = 12					; size = 4
?_Reset0@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@23@@Z PROC ; std::tr1::_Ptr_base<libusb_device_handle>::_Reset0, COMDAT
; _this$ = ecx
; Line 1367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1368
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Reset0@3
; Line 1369
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?_Decref@_Ref_count_base@tr1@std@@QAEXXZ ; std::tr1::_Ref_count_base::_Decref
$LN1@Reset0@3:
; Line 1370
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_rep$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1371
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other_ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Reset0@?$_Ptr_base@Ulibusb_device_handle@@@tr1@std@@QAEXPAUlibusb_device_handle@@PAV_Ref_count_base@23@@Z ENDP ; std::tr1::_Ptr_base<libusb_device_handle>::_Reset0
_TEXT	ENDS
END
